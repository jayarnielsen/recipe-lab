type Modification {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User! @relation(name: "ModificationOwner")
  recipe: Recipe! @relation(name: "RecipeModifications")
  sortings: [Sorting!]! @relation(name: "Sortings", onDelete: CASCADE)
  alterations: [Alteration!]! @relation(name: "Alterations", onDelete: CASCADE)
  removals: [ID!]! @scalarList(strategy: RELATION)
  itemAdditions: [ItemAddition!]!
    @relation(name: "ItemAdditions", onDelete: CASCADE)
  stepAdditions: [StepAddition!]!
    @relation(name: "StepAdditions", onDelete: CASCADE)
  ingredientAdditions: [IngredientAddition!]!
    @relation(name: "IngredientAdditions", onDelete: CASCADE)
}

type Sorting {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  uid: ID! @unique
  parentId: ID!
  order: [ID!]! @scalarList(strategy: RELATION)
  modification: Modification! @relation(name: "Sortings")
}

type Alteration {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  uid: ID! @unique
  sourceId: ID!
  field: String!
  value: String!
  modification: Modification! @relation(name: "Alterations")
}

type ItemAddition {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  uid: ID! @unique
  parentId: ID!
  name: String!
  modification: Modification! @relation(name: "ItemAdditions")
}

type StepAddition {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  uid: ID! @unique
  parentId: ID!
  directions: String!
  modification: Modification! @relation(name: "StepAdditions")
}

type IngredientAddition {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  uid: ID! @unique
  parentId: ID!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
  modification: Modification! @relation(name: "IngredientAdditions")
}
