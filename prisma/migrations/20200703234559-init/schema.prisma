generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

enum UserRole {
  EXECUTIVE_CHEF
  SOUS_CHEF
  COMMIS_CHEF
  KITCHEN_PORTER
}

enum RecipeTime {
  QUICK
  MODERATE
  INVOLVED
}

model User {
  id            String         @default(cuid()) @id
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  email         String         @unique
  slug          String         @unique
  password      String
  avatar        String?
  bio           String         @default("")
  emailVerified Boolean        @default(false)
  name          String
  role          UserRole      @default(KITCHEN_PORTER)
  modifications  Modification[]
  recipes        Recipe[]
}

model Recipe {
  id            String         @default(cuid()) @id
  uid           String         @default(cuid()) @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  description   String         @default("")
  photo         String?
  servingAmount String         @default("")
  servingType   String         @default("")
  slug          String         @unique
  time          RecipeTime     @default(MODERATE)
  title         String         @default("")
  author        User           @relation(fields: [authorId], references: [id])
  authorId      String
  items          Item[]
  modifications  Modification[]
}

model Item {
  id        String   @default(cuid()) @id
  uid       String   @default(cuid()) @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  index     Int
  name      String   @default("")
  recipe    Recipe  @relation(fields: [recipeId], references: [id])
  recipeId  String
  steps      Step[]
}

model Step {
  id         String       @default(cuid()) @id
  uid        String       @default(cuid()) @unique
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  index      Int
  directions String       @default("")
  item       Item        @relation(fields: [itemId], references: [id])
  itemId       String
  Ingredient Ingredient[]
}

model Ingredient {
  id         String   @default(cuid()) @id
  uid        String   @default(cuid()) @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  index      Int
  name       String   @default("")
  processing String   @default("")
  quantity   String   @default("")
  unit       String   @default("")
  step       Step    @relation(fields: [stepId], references: [id])
  stepId       String
}

model Modification {
  id                    String                  @default(cuid()) @id
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  recipe                Recipe                 @relation(fields: [recipeId], references: [id])
  recipeId                String
  user                  User                   @relation(fields: [userId], references: [id])
  userId                  String
  alterations            Alteration[]
  ingredientAdditions    IngredientAddition[]
  itemAdditions          ItemAddition[]
  removals               String[]
  sortings               Sorting[]
  stepAdditions          StepAddition[]
}

model Alteration {
  id           String        @default(cuid()) @id
  uid          String        @default(cuid()) @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  field        String
  value        String
  sourceId     String
  modification Modification @relation(fields: [modificationId], references: [id])
  modificationId String
}

model IngredientAddition {
  id           String        @default(cuid()) @id
  uid          String        @default(cuid()) @unique
  parentId     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String
  processing   String
  quantity     String
  unit         String
  modification Modification @relation(fields: [modificationId], references: [id])
  modificationId String
}

model ItemAddition {
  id           String        @default(cuid()) @id
  uid          String        @default(cuid()) @unique
  parentId     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String
  modification Modification @relation(fields: [modificationId], references: [id])
  modificationId String
}

model Sorting {
  id            String          @default(cuid()) @id
  uid           String          @default(cuid()) @unique
  parentId      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  order String[]
  modification  Modification   @relation(fields: [modificationId], references: [id])
  modificationId  String
}

model StepAddition {
  id           String        @default(cuid()) @id
  uid          String        @default(cuid()) @unique
  parentId     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  directions   String
  modification Modification @relation(fields: [modificationId], references: [id])
  modificationId String
}


