type Modification {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  recipe: Recipe!
  sortings: [Sorting!]!
  alterations: [Alteration!]!
  removals: [ID!]!
  additions: [Addition!]!
  itemAdditions: [ItemAddition!]!
  stepAdditions: [StepAddition!]!
  ingredientAdditions: [IngredientAddition!]!
}

input ModificationInput {
  recipeId: ID!
  removals: [ID!]!
  sortings: [SortingInput!]!
  alterations: [AlterationInput!]!
  items: [ItemAdditionInput!]!
  steps: [StepAdditionInput!]!
  ingredients: [IngredientAdditionInput!]!
}

type Sorting {
  uid: ID!
  parentId: ID!
  order: [ID!]!
}

input SortingInput {
  uid: ID
  parentId: ID!
  order: [ID!]!
}

type Alteration {
  uid: ID!
  sourceId: ID!
  field: String!
  value: String!
}

input AlterationInput {
  uid: ID!
  sourceId: ID!
  field: String!
  value: String!
}

interface Addition {
  uid: ID!
  parentId: ID!
  kind: String!
}

type ItemAddition implements Addition {
  uid: ID!
  parentId: ID!
  kind: String!
  name: String!
}

input ItemAdditionInput {
  uid: ID!
  parentId: ID!
  name: String!
}

type StepAddition implements Addition {
  uid: ID!
  parentId: ID!
  kind: String!
  directions: String!
}

input StepAdditionInput {
  uid: ID
  parentId: ID!
  directions: String!
}

type IngredientAddition implements Addition {
  uid: ID!
  parentId: ID!
  kind: String!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
}

input IngredientAdditionInput {
  uid: ID
  parentId: ID!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
}
