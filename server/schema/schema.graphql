# import Recipe from 'recipes.graphql'
# import User, AuthPayload from 'users.graphql'
# import File from 'files.graphql'
# import * from 'modifications.graphql'

scalar DateTime
scalar Upload

enum OrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type Query {
  sessionUser: User
  recipes(
    where: RecipesWhereInput
    orderBy: OrderByInput
    first: Int
  ): [Recipe!]!
  recipe(slug: String!): Recipe
  user(slug: String!): User
  modification(uid: ID!): Modification
}

type Mutation {
  signup(
    email: String!
    password: String!
    name: String
    modifications: [ModificationInput!]
  ): AuthPayload!
  login(
    email: String!
    password: String!
    modifications: [ModificationInput!]
  ): AuthPayload!
  avatarUpload(userId: ID!, file: Upload!): User!
  avatarDelete(userId: ID!): User!
  updateUser(
    userId: ID!
    name: String!
    bio: String!
    slug: String!
    password: String
    email: String!
  ): User!
  createRecipe(
    title: String!
    time: String!
    servingAmount: String!
    servingType: String!
    description: String!
  ): Recipe!
  saveModification(
    recipeId: ID!
    userId: ID!
    removals: [ID!]!
    sortings: [SortingInput!]!
    alterations: [AlterationInput!]!
    items: [ItemAdditionInput!]!
    steps: [StepAdditionInput!]!
    ingredients: [IngredientAdditionInput!]!
  ): Modification!
  publishRecipe(recipeId: ID!): Recipe!
  recipePhotoUpload(file: Upload!, recipeId: ID!): Recipe!
  recipePhotoDelete(recipeId: ID!): Recipe!
}
