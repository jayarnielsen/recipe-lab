module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.30.0). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateAlteration {
  count: Int!
}

type AggregateIngredient {
  count: Int!
}

type AggregateIngredientAddition {
  count: Int!
}

type AggregateItem {
  count: Int!
}

type AggregateItemAddition {
  count: Int!
}

type AggregateModification {
  count: Int!
}

type AggregateRecipe {
  count: Int!
}

type AggregateRecipePhoto {
  count: Int!
}

type AggregateSorting {
  count: Int!
}

type AggregateStep {
  count: Int!
}

type AggregateStepAddition {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Alteration {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  sourceId: ID!
  field: String!
  value: String!
  modification: Modification!
}

type AlterationConnection {
  pageInfo: PageInfo!
  edges: [AlterationEdge]!
  aggregate: AggregateAlteration!
}

input AlterationCreateInput {
  id: ID
  uid: ID!
  sourceId: ID!
  field: String!
  value: String!
  modification: ModificationCreateOneWithoutAlterationsInput!
}

input AlterationCreateManyWithoutModificationInput {
  create: [AlterationCreateWithoutModificationInput!]
  connect: [AlterationWhereUniqueInput!]
}

input AlterationCreateWithoutModificationInput {
  id: ID
  uid: ID!
  sourceId: ID!
  field: String!
  value: String!
}

type AlterationEdge {
  node: Alteration!
  cursor: String!
}

enum AlterationOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  sourceId_ASC
  sourceId_DESC
  field_ASC
  field_DESC
  value_ASC
  value_DESC
}

type AlterationPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  sourceId: ID!
  field: String!
  value: String!
}

input AlterationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  sourceId: ID
  sourceId_not: ID
  sourceId_in: [ID!]
  sourceId_not_in: [ID!]
  sourceId_lt: ID
  sourceId_lte: ID
  sourceId_gt: ID
  sourceId_gte: ID
  sourceId_contains: ID
  sourceId_not_contains: ID
  sourceId_starts_with: ID
  sourceId_not_starts_with: ID
  sourceId_ends_with: ID
  sourceId_not_ends_with: ID
  field: String
  field_not: String
  field_in: [String!]
  field_not_in: [String!]
  field_lt: String
  field_lte: String
  field_gt: String
  field_gte: String
  field_contains: String
  field_not_contains: String
  field_starts_with: String
  field_not_starts_with: String
  field_ends_with: String
  field_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  AND: [AlterationScalarWhereInput!]
  OR: [AlterationScalarWhereInput!]
  NOT: [AlterationScalarWhereInput!]
}

type AlterationSubscriptionPayload {
  mutation: MutationType!
  node: Alteration
  updatedFields: [String!]
  previousValues: AlterationPreviousValues
}

input AlterationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AlterationWhereInput
  AND: [AlterationSubscriptionWhereInput!]
  OR: [AlterationSubscriptionWhereInput!]
  NOT: [AlterationSubscriptionWhereInput!]
}

input AlterationUpdateInput {
  uid: ID
  sourceId: ID
  field: String
  value: String
  modification: ModificationUpdateOneRequiredWithoutAlterationsInput
}

input AlterationUpdateManyDataInput {
  uid: ID
  sourceId: ID
  field: String
  value: String
}

input AlterationUpdateManyMutationInput {
  uid: ID
  sourceId: ID
  field: String
  value: String
}

input AlterationUpdateManyWithoutModificationInput {
  create: [AlterationCreateWithoutModificationInput!]
  delete: [AlterationWhereUniqueInput!]
  connect: [AlterationWhereUniqueInput!]
  set: [AlterationWhereUniqueInput!]
  disconnect: [AlterationWhereUniqueInput!]
  update: [AlterationUpdateWithWhereUniqueWithoutModificationInput!]
  upsert: [AlterationUpsertWithWhereUniqueWithoutModificationInput!]
  deleteMany: [AlterationScalarWhereInput!]
  updateMany: [AlterationUpdateManyWithWhereNestedInput!]
}

input AlterationUpdateManyWithWhereNestedInput {
  where: AlterationScalarWhereInput!
  data: AlterationUpdateManyDataInput!
}

input AlterationUpdateWithoutModificationDataInput {
  uid: ID
  sourceId: ID
  field: String
  value: String
}

input AlterationUpdateWithWhereUniqueWithoutModificationInput {
  where: AlterationWhereUniqueInput!
  data: AlterationUpdateWithoutModificationDataInput!
}

input AlterationUpsertWithWhereUniqueWithoutModificationInput {
  where: AlterationWhereUniqueInput!
  update: AlterationUpdateWithoutModificationDataInput!
  create: AlterationCreateWithoutModificationInput!
}

input AlterationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  sourceId: ID
  sourceId_not: ID
  sourceId_in: [ID!]
  sourceId_not_in: [ID!]
  sourceId_lt: ID
  sourceId_lte: ID
  sourceId_gt: ID
  sourceId_gte: ID
  sourceId_contains: ID
  sourceId_not_contains: ID
  sourceId_starts_with: ID
  sourceId_not_starts_with: ID
  sourceId_ends_with: ID
  sourceId_not_ends_with: ID
  field: String
  field_not: String
  field_in: [String!]
  field_not_in: [String!]
  field_lt: String
  field_lte: String
  field_gt: String
  field_gte: String
  field_contains: String
  field_not_contains: String
  field_starts_with: String
  field_not_starts_with: String
  field_ends_with: String
  field_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  modification: ModificationWhereInput
  AND: [AlterationWhereInput!]
  OR: [AlterationWhereInput!]
  NOT: [AlterationWhereInput!]
}

input AlterationWhereUniqueInput {
  id: ID
  uid: ID
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type Ingredient {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  index: Int!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
  step: Step!
}

type IngredientAddition {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
  modification: Modification!
}

type IngredientAdditionConnection {
  pageInfo: PageInfo!
  edges: [IngredientAdditionEdge]!
  aggregate: AggregateIngredientAddition!
}

input IngredientAdditionCreateInput {
  id: ID
  uid: ID!
  parentId: ID!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
  modification: ModificationCreateOneWithoutIngredientAdditionsInput!
}

input IngredientAdditionCreateManyWithoutModificationInput {
  create: [IngredientAdditionCreateWithoutModificationInput!]
  connect: [IngredientAdditionWhereUniqueInput!]
}

input IngredientAdditionCreateWithoutModificationInput {
  id: ID
  uid: ID!
  parentId: ID!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
}

type IngredientAdditionEdge {
  node: IngredientAddition!
  cursor: String!
}

enum IngredientAdditionOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  parentId_ASC
  parentId_DESC
  name_ASC
  name_DESC
  quantity_ASC
  quantity_DESC
  unit_ASC
  unit_DESC
  processing_ASC
  processing_DESC
}

type IngredientAdditionPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
}

input IngredientAdditionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  quantity: String
  quantity_not: String
  quantity_in: [String!]
  quantity_not_in: [String!]
  quantity_lt: String
  quantity_lte: String
  quantity_gt: String
  quantity_gte: String
  quantity_contains: String
  quantity_not_contains: String
  quantity_starts_with: String
  quantity_not_starts_with: String
  quantity_ends_with: String
  quantity_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  processing: String
  processing_not: String
  processing_in: [String!]
  processing_not_in: [String!]
  processing_lt: String
  processing_lte: String
  processing_gt: String
  processing_gte: String
  processing_contains: String
  processing_not_contains: String
  processing_starts_with: String
  processing_not_starts_with: String
  processing_ends_with: String
  processing_not_ends_with: String
  AND: [IngredientAdditionScalarWhereInput!]
  OR: [IngredientAdditionScalarWhereInput!]
  NOT: [IngredientAdditionScalarWhereInput!]
}

type IngredientAdditionSubscriptionPayload {
  mutation: MutationType!
  node: IngredientAddition
  updatedFields: [String!]
  previousValues: IngredientAdditionPreviousValues
}

input IngredientAdditionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: IngredientAdditionWhereInput
  AND: [IngredientAdditionSubscriptionWhereInput!]
  OR: [IngredientAdditionSubscriptionWhereInput!]
  NOT: [IngredientAdditionSubscriptionWhereInput!]
}

input IngredientAdditionUpdateInput {
  uid: ID
  parentId: ID
  name: String
  quantity: String
  unit: String
  processing: String
  modification: ModificationUpdateOneRequiredWithoutIngredientAdditionsInput
}

input IngredientAdditionUpdateManyDataInput {
  uid: ID
  parentId: ID
  name: String
  quantity: String
  unit: String
  processing: String
}

input IngredientAdditionUpdateManyMutationInput {
  uid: ID
  parentId: ID
  name: String
  quantity: String
  unit: String
  processing: String
}

input IngredientAdditionUpdateManyWithoutModificationInput {
  create: [IngredientAdditionCreateWithoutModificationInput!]
  delete: [IngredientAdditionWhereUniqueInput!]
  connect: [IngredientAdditionWhereUniqueInput!]
  set: [IngredientAdditionWhereUniqueInput!]
  disconnect: [IngredientAdditionWhereUniqueInput!]
  update: [IngredientAdditionUpdateWithWhereUniqueWithoutModificationInput!]
  upsert: [IngredientAdditionUpsertWithWhereUniqueWithoutModificationInput!]
  deleteMany: [IngredientAdditionScalarWhereInput!]
  updateMany: [IngredientAdditionUpdateManyWithWhereNestedInput!]
}

input IngredientAdditionUpdateManyWithWhereNestedInput {
  where: IngredientAdditionScalarWhereInput!
  data: IngredientAdditionUpdateManyDataInput!
}

input IngredientAdditionUpdateWithoutModificationDataInput {
  uid: ID
  parentId: ID
  name: String
  quantity: String
  unit: String
  processing: String
}

input IngredientAdditionUpdateWithWhereUniqueWithoutModificationInput {
  where: IngredientAdditionWhereUniqueInput!
  data: IngredientAdditionUpdateWithoutModificationDataInput!
}

input IngredientAdditionUpsertWithWhereUniqueWithoutModificationInput {
  where: IngredientAdditionWhereUniqueInput!
  update: IngredientAdditionUpdateWithoutModificationDataInput!
  create: IngredientAdditionCreateWithoutModificationInput!
}

input IngredientAdditionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  quantity: String
  quantity_not: String
  quantity_in: [String!]
  quantity_not_in: [String!]
  quantity_lt: String
  quantity_lte: String
  quantity_gt: String
  quantity_gte: String
  quantity_contains: String
  quantity_not_contains: String
  quantity_starts_with: String
  quantity_not_starts_with: String
  quantity_ends_with: String
  quantity_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  processing: String
  processing_not: String
  processing_in: [String!]
  processing_not_in: [String!]
  processing_lt: String
  processing_lte: String
  processing_gt: String
  processing_gte: String
  processing_contains: String
  processing_not_contains: String
  processing_starts_with: String
  processing_not_starts_with: String
  processing_ends_with: String
  processing_not_ends_with: String
  modification: ModificationWhereInput
  AND: [IngredientAdditionWhereInput!]
  OR: [IngredientAdditionWhereInput!]
  NOT: [IngredientAdditionWhereInput!]
}

input IngredientAdditionWhereUniqueInput {
  id: ID
  uid: ID
}

type IngredientConnection {
  pageInfo: PageInfo!
  edges: [IngredientEdge]!
  aggregate: AggregateIngredient!
}

input IngredientCreateInput {
  id: ID
  uid: ID!
  index: Int!
  name: String
  quantity: String
  unit: String
  processing: String
  step: StepCreateOneWithoutIngredientsInput!
}

input IngredientCreateManyWithoutStepInput {
  create: [IngredientCreateWithoutStepInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutStepInput {
  id: ID
  uid: ID!
  index: Int!
  name: String
  quantity: String
  unit: String
  processing: String
}

type IngredientEdge {
  node: Ingredient!
  cursor: String!
}

enum IngredientOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  index_ASC
  index_DESC
  name_ASC
  name_DESC
  quantity_ASC
  quantity_DESC
  unit_ASC
  unit_DESC
  processing_ASC
  processing_DESC
}

type IngredientPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  index: Int!
  name: String!
  quantity: String!
  unit: String!
  processing: String!
}

input IngredientScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  quantity: String
  quantity_not: String
  quantity_in: [String!]
  quantity_not_in: [String!]
  quantity_lt: String
  quantity_lte: String
  quantity_gt: String
  quantity_gte: String
  quantity_contains: String
  quantity_not_contains: String
  quantity_starts_with: String
  quantity_not_starts_with: String
  quantity_ends_with: String
  quantity_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  processing: String
  processing_not: String
  processing_in: [String!]
  processing_not_in: [String!]
  processing_lt: String
  processing_lte: String
  processing_gt: String
  processing_gte: String
  processing_contains: String
  processing_not_contains: String
  processing_starts_with: String
  processing_not_starts_with: String
  processing_ends_with: String
  processing_not_ends_with: String
  AND: [IngredientScalarWhereInput!]
  OR: [IngredientScalarWhereInput!]
  NOT: [IngredientScalarWhereInput!]
}

type IngredientSubscriptionPayload {
  mutation: MutationType!
  node: Ingredient
  updatedFields: [String!]
  previousValues: IngredientPreviousValues
}

input IngredientSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: IngredientWhereInput
  AND: [IngredientSubscriptionWhereInput!]
  OR: [IngredientSubscriptionWhereInput!]
  NOT: [IngredientSubscriptionWhereInput!]
}

input IngredientUpdateInput {
  uid: ID
  index: Int
  name: String
  quantity: String
  unit: String
  processing: String
  step: StepUpdateOneRequiredWithoutIngredientsInput
}

input IngredientUpdateManyDataInput {
  uid: ID
  index: Int
  name: String
  quantity: String
  unit: String
  processing: String
}

input IngredientUpdateManyMutationInput {
  uid: ID
  index: Int
  name: String
  quantity: String
  unit: String
  processing: String
}

input IngredientUpdateManyWithoutStepInput {
  create: [IngredientCreateWithoutStepInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutStepInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutStepInput!]
  deleteMany: [IngredientScalarWhereInput!]
  updateMany: [IngredientUpdateManyWithWhereNestedInput!]
}

input IngredientUpdateManyWithWhereNestedInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyDataInput!
}

input IngredientUpdateWithoutStepDataInput {
  uid: ID
  index: Int
  name: String
  quantity: String
  unit: String
  processing: String
}

input IngredientUpdateWithWhereUniqueWithoutStepInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutStepDataInput!
}

input IngredientUpsertWithWhereUniqueWithoutStepInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutStepDataInput!
  create: IngredientCreateWithoutStepInput!
}

input IngredientWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  quantity: String
  quantity_not: String
  quantity_in: [String!]
  quantity_not_in: [String!]
  quantity_lt: String
  quantity_lte: String
  quantity_gt: String
  quantity_gte: String
  quantity_contains: String
  quantity_not_contains: String
  quantity_starts_with: String
  quantity_not_starts_with: String
  quantity_ends_with: String
  quantity_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  processing: String
  processing_not: String
  processing_in: [String!]
  processing_not_in: [String!]
  processing_lt: String
  processing_lte: String
  processing_gt: String
  processing_gte: String
  processing_contains: String
  processing_not_contains: String
  processing_starts_with: String
  processing_not_starts_with: String
  processing_ends_with: String
  processing_not_ends_with: String
  step: StepWhereInput
  AND: [IngredientWhereInput!]
  OR: [IngredientWhereInput!]
  NOT: [IngredientWhereInput!]
}

input IngredientWhereUniqueInput {
  id: ID
  uid: ID
}

type Item {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  index: Int!
  name: String!
  recipe: Recipe!
  steps(where: StepWhereInput, orderBy: StepOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Step!]
}

type ItemAddition {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  name: String!
  modification: Modification!
}

type ItemAdditionConnection {
  pageInfo: PageInfo!
  edges: [ItemAdditionEdge]!
  aggregate: AggregateItemAddition!
}

input ItemAdditionCreateInput {
  id: ID
  uid: ID!
  parentId: ID!
  name: String!
  modification: ModificationCreateOneWithoutItemAdditionsInput!
}

input ItemAdditionCreateManyWithoutModificationInput {
  create: [ItemAdditionCreateWithoutModificationInput!]
  connect: [ItemAdditionWhereUniqueInput!]
}

input ItemAdditionCreateWithoutModificationInput {
  id: ID
  uid: ID!
  parentId: ID!
  name: String!
}

type ItemAdditionEdge {
  node: ItemAddition!
  cursor: String!
}

enum ItemAdditionOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  parentId_ASC
  parentId_DESC
  name_ASC
  name_DESC
}

type ItemAdditionPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  name: String!
}

input ItemAdditionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [ItemAdditionScalarWhereInput!]
  OR: [ItemAdditionScalarWhereInput!]
  NOT: [ItemAdditionScalarWhereInput!]
}

type ItemAdditionSubscriptionPayload {
  mutation: MutationType!
  node: ItemAddition
  updatedFields: [String!]
  previousValues: ItemAdditionPreviousValues
}

input ItemAdditionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ItemAdditionWhereInput
  AND: [ItemAdditionSubscriptionWhereInput!]
  OR: [ItemAdditionSubscriptionWhereInput!]
  NOT: [ItemAdditionSubscriptionWhereInput!]
}

input ItemAdditionUpdateInput {
  uid: ID
  parentId: ID
  name: String
  modification: ModificationUpdateOneRequiredWithoutItemAdditionsInput
}

input ItemAdditionUpdateManyDataInput {
  uid: ID
  parentId: ID
  name: String
}

input ItemAdditionUpdateManyMutationInput {
  uid: ID
  parentId: ID
  name: String
}

input ItemAdditionUpdateManyWithoutModificationInput {
  create: [ItemAdditionCreateWithoutModificationInput!]
  delete: [ItemAdditionWhereUniqueInput!]
  connect: [ItemAdditionWhereUniqueInput!]
  set: [ItemAdditionWhereUniqueInput!]
  disconnect: [ItemAdditionWhereUniqueInput!]
  update: [ItemAdditionUpdateWithWhereUniqueWithoutModificationInput!]
  upsert: [ItemAdditionUpsertWithWhereUniqueWithoutModificationInput!]
  deleteMany: [ItemAdditionScalarWhereInput!]
  updateMany: [ItemAdditionUpdateManyWithWhereNestedInput!]
}

input ItemAdditionUpdateManyWithWhereNestedInput {
  where: ItemAdditionScalarWhereInput!
  data: ItemAdditionUpdateManyDataInput!
}

input ItemAdditionUpdateWithoutModificationDataInput {
  uid: ID
  parentId: ID
  name: String
}

input ItemAdditionUpdateWithWhereUniqueWithoutModificationInput {
  where: ItemAdditionWhereUniqueInput!
  data: ItemAdditionUpdateWithoutModificationDataInput!
}

input ItemAdditionUpsertWithWhereUniqueWithoutModificationInput {
  where: ItemAdditionWhereUniqueInput!
  update: ItemAdditionUpdateWithoutModificationDataInput!
  create: ItemAdditionCreateWithoutModificationInput!
}

input ItemAdditionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  modification: ModificationWhereInput
  AND: [ItemAdditionWhereInput!]
  OR: [ItemAdditionWhereInput!]
  NOT: [ItemAdditionWhereInput!]
}

input ItemAdditionWhereUniqueInput {
  id: ID
  uid: ID
}

type ItemConnection {
  pageInfo: PageInfo!
  edges: [ItemEdge]!
  aggregate: AggregateItem!
}

input ItemCreateInput {
  id: ID
  uid: ID!
  index: Int!
  name: String
  recipe: RecipeCreateOneWithoutItemsInput!
  steps: StepCreateManyWithoutItemInput
}

input ItemCreateManyWithoutRecipeInput {
  create: [ItemCreateWithoutRecipeInput!]
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateOneWithoutStepsInput {
  create: ItemCreateWithoutStepsInput
  connect: ItemWhereUniqueInput
}

input ItemCreateWithoutRecipeInput {
  id: ID
  uid: ID!
  index: Int!
  name: String
  steps: StepCreateManyWithoutItemInput
}

input ItemCreateWithoutStepsInput {
  id: ID
  uid: ID!
  index: Int!
  name: String
  recipe: RecipeCreateOneWithoutItemsInput!
}

type ItemEdge {
  node: Item!
  cursor: String!
}

enum ItemOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  index_ASC
  index_DESC
  name_ASC
  name_DESC
}

type ItemPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  index: Int!
  name: String!
}

input ItemScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [ItemScalarWhereInput!]
  OR: [ItemScalarWhereInput!]
  NOT: [ItemScalarWhereInput!]
}

type ItemSubscriptionPayload {
  mutation: MutationType!
  node: Item
  updatedFields: [String!]
  previousValues: ItemPreviousValues
}

input ItemSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ItemWhereInput
  AND: [ItemSubscriptionWhereInput!]
  OR: [ItemSubscriptionWhereInput!]
  NOT: [ItemSubscriptionWhereInput!]
}

input ItemUpdateInput {
  uid: ID
  index: Int
  name: String
  recipe: RecipeUpdateOneRequiredWithoutItemsInput
  steps: StepUpdateManyWithoutItemInput
}

input ItemUpdateManyDataInput {
  uid: ID
  index: Int
  name: String
}

input ItemUpdateManyMutationInput {
  uid: ID
  index: Int
  name: String
}

input ItemUpdateManyWithoutRecipeInput {
  create: [ItemCreateWithoutRecipeInput!]
  delete: [ItemWhereUniqueInput!]
  connect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutRecipeInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutRecipeInput!]
  deleteMany: [ItemScalarWhereInput!]
  updateMany: [ItemUpdateManyWithWhereNestedInput!]
}

input ItemUpdateManyWithWhereNestedInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyDataInput!
}

input ItemUpdateOneRequiredWithoutStepsInput {
  create: ItemCreateWithoutStepsInput
  update: ItemUpdateWithoutStepsDataInput
  upsert: ItemUpsertWithoutStepsInput
  connect: ItemWhereUniqueInput
}

input ItemUpdateWithoutRecipeDataInput {
  uid: ID
  index: Int
  name: String
  steps: StepUpdateManyWithoutItemInput
}

input ItemUpdateWithoutStepsDataInput {
  uid: ID
  index: Int
  name: String
  recipe: RecipeUpdateOneRequiredWithoutItemsInput
}

input ItemUpdateWithWhereUniqueWithoutRecipeInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutRecipeDataInput!
}

input ItemUpsertWithoutStepsInput {
  update: ItemUpdateWithoutStepsDataInput!
  create: ItemCreateWithoutStepsInput!
}

input ItemUpsertWithWhereUniqueWithoutRecipeInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutRecipeDataInput!
  create: ItemCreateWithoutRecipeInput!
}

input ItemWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  recipe: RecipeWhereInput
  steps_every: StepWhereInput
  steps_some: StepWhereInput
  steps_none: StepWhereInput
  AND: [ItemWhereInput!]
  OR: [ItemWhereInput!]
  NOT: [ItemWhereInput!]
}

input ItemWhereUniqueInput {
  id: ID
  uid: ID
}

scalar Long

type Modification {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  recipe: Recipe!
  sortings(where: SortingWhereInput, orderBy: SortingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sorting!]
  alterations(where: AlterationWhereInput, orderBy: AlterationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Alteration!]
  removals: [ID!]!
  itemAdditions(where: ItemAdditionWhereInput, orderBy: ItemAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ItemAddition!]
  stepAdditions(where: StepAdditionWhereInput, orderBy: StepAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StepAddition!]
  ingredientAdditions(where: IngredientAdditionWhereInput, orderBy: IngredientAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [IngredientAddition!]
}

type ModificationConnection {
  pageInfo: PageInfo!
  edges: [ModificationEdge]!
  aggregate: AggregateModification!
}

input ModificationCreateInput {
  id: ID
  user: UserCreateOneWithoutModificationsInput!
  recipe: RecipeCreateOneWithoutModificationsInput!
  sortings: SortingCreateManyWithoutModificationInput
  alterations: AlterationCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  itemAdditions: ItemAdditionCreateManyWithoutModificationInput
  stepAdditions: StepAdditionCreateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionCreateManyWithoutModificationInput
}

input ModificationCreateManyWithoutRecipeInput {
  create: [ModificationCreateWithoutRecipeInput!]
  connect: [ModificationWhereUniqueInput!]
}

input ModificationCreateManyWithoutUserInput {
  create: [ModificationCreateWithoutUserInput!]
  connect: [ModificationWhereUniqueInput!]
}

input ModificationCreateOneWithoutAlterationsInput {
  create: ModificationCreateWithoutAlterationsInput
  connect: ModificationWhereUniqueInput
}

input ModificationCreateOneWithoutIngredientAdditionsInput {
  create: ModificationCreateWithoutIngredientAdditionsInput
  connect: ModificationWhereUniqueInput
}

input ModificationCreateOneWithoutItemAdditionsInput {
  create: ModificationCreateWithoutItemAdditionsInput
  connect: ModificationWhereUniqueInput
}

input ModificationCreateOneWithoutSortingsInput {
  create: ModificationCreateWithoutSortingsInput
  connect: ModificationWhereUniqueInput
}

input ModificationCreateOneWithoutStepAdditionsInput {
  create: ModificationCreateWithoutStepAdditionsInput
  connect: ModificationWhereUniqueInput
}

input ModificationCreateremovalsInput {
  set: [ID!]
}

input ModificationCreateWithoutAlterationsInput {
  id: ID
  user: UserCreateOneWithoutModificationsInput!
  recipe: RecipeCreateOneWithoutModificationsInput!
  sortings: SortingCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  itemAdditions: ItemAdditionCreateManyWithoutModificationInput
  stepAdditions: StepAdditionCreateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionCreateManyWithoutModificationInput
}

input ModificationCreateWithoutIngredientAdditionsInput {
  id: ID
  user: UserCreateOneWithoutModificationsInput!
  recipe: RecipeCreateOneWithoutModificationsInput!
  sortings: SortingCreateManyWithoutModificationInput
  alterations: AlterationCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  itemAdditions: ItemAdditionCreateManyWithoutModificationInput
  stepAdditions: StepAdditionCreateManyWithoutModificationInput
}

input ModificationCreateWithoutItemAdditionsInput {
  id: ID
  user: UserCreateOneWithoutModificationsInput!
  recipe: RecipeCreateOneWithoutModificationsInput!
  sortings: SortingCreateManyWithoutModificationInput
  alterations: AlterationCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  stepAdditions: StepAdditionCreateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionCreateManyWithoutModificationInput
}

input ModificationCreateWithoutRecipeInput {
  id: ID
  user: UserCreateOneWithoutModificationsInput!
  sortings: SortingCreateManyWithoutModificationInput
  alterations: AlterationCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  itemAdditions: ItemAdditionCreateManyWithoutModificationInput
  stepAdditions: StepAdditionCreateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionCreateManyWithoutModificationInput
}

input ModificationCreateWithoutSortingsInput {
  id: ID
  user: UserCreateOneWithoutModificationsInput!
  recipe: RecipeCreateOneWithoutModificationsInput!
  alterations: AlterationCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  itemAdditions: ItemAdditionCreateManyWithoutModificationInput
  stepAdditions: StepAdditionCreateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionCreateManyWithoutModificationInput
}

input ModificationCreateWithoutStepAdditionsInput {
  id: ID
  user: UserCreateOneWithoutModificationsInput!
  recipe: RecipeCreateOneWithoutModificationsInput!
  sortings: SortingCreateManyWithoutModificationInput
  alterations: AlterationCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  itemAdditions: ItemAdditionCreateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionCreateManyWithoutModificationInput
}

input ModificationCreateWithoutUserInput {
  id: ID
  recipe: RecipeCreateOneWithoutModificationsInput!
  sortings: SortingCreateManyWithoutModificationInput
  alterations: AlterationCreateManyWithoutModificationInput
  removals: ModificationCreateremovalsInput
  itemAdditions: ItemAdditionCreateManyWithoutModificationInput
  stepAdditions: StepAdditionCreateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionCreateManyWithoutModificationInput
}

type ModificationEdge {
  node: Modification!
  cursor: String!
}

enum ModificationOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ModificationPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  removals: [ID!]!
}

input ModificationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ModificationScalarWhereInput!]
  OR: [ModificationScalarWhereInput!]
  NOT: [ModificationScalarWhereInput!]
}

type ModificationSubscriptionPayload {
  mutation: MutationType!
  node: Modification
  updatedFields: [String!]
  previousValues: ModificationPreviousValues
}

input ModificationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ModificationWhereInput
  AND: [ModificationSubscriptionWhereInput!]
  OR: [ModificationSubscriptionWhereInput!]
  NOT: [ModificationSubscriptionWhereInput!]
}

input ModificationUpdateInput {
  user: UserUpdateOneRequiredWithoutModificationsInput
  recipe: RecipeUpdateOneRequiredWithoutModificationsInput
  sortings: SortingUpdateManyWithoutModificationInput
  alterations: AlterationUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  itemAdditions: ItemAdditionUpdateManyWithoutModificationInput
  stepAdditions: StepAdditionUpdateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateManyDataInput {
  removals: ModificationUpdateremovalsInput
}

input ModificationUpdateManyMutationInput {
  removals: ModificationUpdateremovalsInput
}

input ModificationUpdateManyWithoutRecipeInput {
  create: [ModificationCreateWithoutRecipeInput!]
  delete: [ModificationWhereUniqueInput!]
  connect: [ModificationWhereUniqueInput!]
  set: [ModificationWhereUniqueInput!]
  disconnect: [ModificationWhereUniqueInput!]
  update: [ModificationUpdateWithWhereUniqueWithoutRecipeInput!]
  upsert: [ModificationUpsertWithWhereUniqueWithoutRecipeInput!]
  deleteMany: [ModificationScalarWhereInput!]
  updateMany: [ModificationUpdateManyWithWhereNestedInput!]
}

input ModificationUpdateManyWithoutUserInput {
  create: [ModificationCreateWithoutUserInput!]
  delete: [ModificationWhereUniqueInput!]
  connect: [ModificationWhereUniqueInput!]
  set: [ModificationWhereUniqueInput!]
  disconnect: [ModificationWhereUniqueInput!]
  update: [ModificationUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [ModificationUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [ModificationScalarWhereInput!]
  updateMany: [ModificationUpdateManyWithWhereNestedInput!]
}

input ModificationUpdateManyWithWhereNestedInput {
  where: ModificationScalarWhereInput!
  data: ModificationUpdateManyDataInput!
}

input ModificationUpdateOneRequiredWithoutAlterationsInput {
  create: ModificationCreateWithoutAlterationsInput
  update: ModificationUpdateWithoutAlterationsDataInput
  upsert: ModificationUpsertWithoutAlterationsInput
  connect: ModificationWhereUniqueInput
}

input ModificationUpdateOneRequiredWithoutIngredientAdditionsInput {
  create: ModificationCreateWithoutIngredientAdditionsInput
  update: ModificationUpdateWithoutIngredientAdditionsDataInput
  upsert: ModificationUpsertWithoutIngredientAdditionsInput
  connect: ModificationWhereUniqueInput
}

input ModificationUpdateOneRequiredWithoutItemAdditionsInput {
  create: ModificationCreateWithoutItemAdditionsInput
  update: ModificationUpdateWithoutItemAdditionsDataInput
  upsert: ModificationUpsertWithoutItemAdditionsInput
  connect: ModificationWhereUniqueInput
}

input ModificationUpdateOneRequiredWithoutSortingsInput {
  create: ModificationCreateWithoutSortingsInput
  update: ModificationUpdateWithoutSortingsDataInput
  upsert: ModificationUpsertWithoutSortingsInput
  connect: ModificationWhereUniqueInput
}

input ModificationUpdateOneRequiredWithoutStepAdditionsInput {
  create: ModificationCreateWithoutStepAdditionsInput
  update: ModificationUpdateWithoutStepAdditionsDataInput
  upsert: ModificationUpsertWithoutStepAdditionsInput
  connect: ModificationWhereUniqueInput
}

input ModificationUpdateremovalsInput {
  set: [ID!]
}

input ModificationUpdateWithoutAlterationsDataInput {
  user: UserUpdateOneRequiredWithoutModificationsInput
  recipe: RecipeUpdateOneRequiredWithoutModificationsInput
  sortings: SortingUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  itemAdditions: ItemAdditionUpdateManyWithoutModificationInput
  stepAdditions: StepAdditionUpdateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateWithoutIngredientAdditionsDataInput {
  user: UserUpdateOneRequiredWithoutModificationsInput
  recipe: RecipeUpdateOneRequiredWithoutModificationsInput
  sortings: SortingUpdateManyWithoutModificationInput
  alterations: AlterationUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  itemAdditions: ItemAdditionUpdateManyWithoutModificationInput
  stepAdditions: StepAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateWithoutItemAdditionsDataInput {
  user: UserUpdateOneRequiredWithoutModificationsInput
  recipe: RecipeUpdateOneRequiredWithoutModificationsInput
  sortings: SortingUpdateManyWithoutModificationInput
  alterations: AlterationUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  stepAdditions: StepAdditionUpdateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateWithoutRecipeDataInput {
  user: UserUpdateOneRequiredWithoutModificationsInput
  sortings: SortingUpdateManyWithoutModificationInput
  alterations: AlterationUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  itemAdditions: ItemAdditionUpdateManyWithoutModificationInput
  stepAdditions: StepAdditionUpdateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateWithoutSortingsDataInput {
  user: UserUpdateOneRequiredWithoutModificationsInput
  recipe: RecipeUpdateOneRequiredWithoutModificationsInput
  alterations: AlterationUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  itemAdditions: ItemAdditionUpdateManyWithoutModificationInput
  stepAdditions: StepAdditionUpdateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateWithoutStepAdditionsDataInput {
  user: UserUpdateOneRequiredWithoutModificationsInput
  recipe: RecipeUpdateOneRequiredWithoutModificationsInput
  sortings: SortingUpdateManyWithoutModificationInput
  alterations: AlterationUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  itemAdditions: ItemAdditionUpdateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateWithoutUserDataInput {
  recipe: RecipeUpdateOneRequiredWithoutModificationsInput
  sortings: SortingUpdateManyWithoutModificationInput
  alterations: AlterationUpdateManyWithoutModificationInput
  removals: ModificationUpdateremovalsInput
  itemAdditions: ItemAdditionUpdateManyWithoutModificationInput
  stepAdditions: StepAdditionUpdateManyWithoutModificationInput
  ingredientAdditions: IngredientAdditionUpdateManyWithoutModificationInput
}

input ModificationUpdateWithWhereUniqueWithoutRecipeInput {
  where: ModificationWhereUniqueInput!
  data: ModificationUpdateWithoutRecipeDataInput!
}

input ModificationUpdateWithWhereUniqueWithoutUserInput {
  where: ModificationWhereUniqueInput!
  data: ModificationUpdateWithoutUserDataInput!
}

input ModificationUpsertWithoutAlterationsInput {
  update: ModificationUpdateWithoutAlterationsDataInput!
  create: ModificationCreateWithoutAlterationsInput!
}

input ModificationUpsertWithoutIngredientAdditionsInput {
  update: ModificationUpdateWithoutIngredientAdditionsDataInput!
  create: ModificationCreateWithoutIngredientAdditionsInput!
}

input ModificationUpsertWithoutItemAdditionsInput {
  update: ModificationUpdateWithoutItemAdditionsDataInput!
  create: ModificationCreateWithoutItemAdditionsInput!
}

input ModificationUpsertWithoutSortingsInput {
  update: ModificationUpdateWithoutSortingsDataInput!
  create: ModificationCreateWithoutSortingsInput!
}

input ModificationUpsertWithoutStepAdditionsInput {
  update: ModificationUpdateWithoutStepAdditionsDataInput!
  create: ModificationCreateWithoutStepAdditionsInput!
}

input ModificationUpsertWithWhereUniqueWithoutRecipeInput {
  where: ModificationWhereUniqueInput!
  update: ModificationUpdateWithoutRecipeDataInput!
  create: ModificationCreateWithoutRecipeInput!
}

input ModificationUpsertWithWhereUniqueWithoutUserInput {
  where: ModificationWhereUniqueInput!
  update: ModificationUpdateWithoutUserDataInput!
  create: ModificationCreateWithoutUserInput!
}

input ModificationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  user: UserWhereInput
  recipe: RecipeWhereInput
  sortings_every: SortingWhereInput
  sortings_some: SortingWhereInput
  sortings_none: SortingWhereInput
  alterations_every: AlterationWhereInput
  alterations_some: AlterationWhereInput
  alterations_none: AlterationWhereInput
  itemAdditions_every: ItemAdditionWhereInput
  itemAdditions_some: ItemAdditionWhereInput
  itemAdditions_none: ItemAdditionWhereInput
  stepAdditions_every: StepAdditionWhereInput
  stepAdditions_some: StepAdditionWhereInput
  stepAdditions_none: StepAdditionWhereInput
  ingredientAdditions_every: IngredientAdditionWhereInput
  ingredientAdditions_some: IngredientAdditionWhereInput
  ingredientAdditions_none: IngredientAdditionWhereInput
  AND: [ModificationWhereInput!]
  OR: [ModificationWhereInput!]
  NOT: [ModificationWhereInput!]
}

input ModificationWhereUniqueInput {
  id: ID
}

type Mutation {
  createAlteration(data: AlterationCreateInput!): Alteration!
  updateAlteration(data: AlterationUpdateInput!, where: AlterationWhereUniqueInput!): Alteration
  updateManyAlterations(data: AlterationUpdateManyMutationInput!, where: AlterationWhereInput): BatchPayload!
  upsertAlteration(where: AlterationWhereUniqueInput!, create: AlterationCreateInput!, update: AlterationUpdateInput!): Alteration!
  deleteAlteration(where: AlterationWhereUniqueInput!): Alteration
  deleteManyAlterations(where: AlterationWhereInput): BatchPayload!
  createIngredient(data: IngredientCreateInput!): Ingredient!
  updateIngredient(data: IngredientUpdateInput!, where: IngredientWhereUniqueInput!): Ingredient
  updateManyIngredients(data: IngredientUpdateManyMutationInput!, where: IngredientWhereInput): BatchPayload!
  upsertIngredient(where: IngredientWhereUniqueInput!, create: IngredientCreateInput!, update: IngredientUpdateInput!): Ingredient!
  deleteIngredient(where: IngredientWhereUniqueInput!): Ingredient
  deleteManyIngredients(where: IngredientWhereInput): BatchPayload!
  createIngredientAddition(data: IngredientAdditionCreateInput!): IngredientAddition!
  updateIngredientAddition(data: IngredientAdditionUpdateInput!, where: IngredientAdditionWhereUniqueInput!): IngredientAddition
  updateManyIngredientAdditions(data: IngredientAdditionUpdateManyMutationInput!, where: IngredientAdditionWhereInput): BatchPayload!
  upsertIngredientAddition(where: IngredientAdditionWhereUniqueInput!, create: IngredientAdditionCreateInput!, update: IngredientAdditionUpdateInput!): IngredientAddition!
  deleteIngredientAddition(where: IngredientAdditionWhereUniqueInput!): IngredientAddition
  deleteManyIngredientAdditions(where: IngredientAdditionWhereInput): BatchPayload!
  createItem(data: ItemCreateInput!): Item!
  updateItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  updateManyItems(data: ItemUpdateManyMutationInput!, where: ItemWhereInput): BatchPayload!
  upsertItem(where: ItemWhereUniqueInput!, create: ItemCreateInput!, update: ItemUpdateInput!): Item!
  deleteItem(where: ItemWhereUniqueInput!): Item
  deleteManyItems(where: ItemWhereInput): BatchPayload!
  createItemAddition(data: ItemAdditionCreateInput!): ItemAddition!
  updateItemAddition(data: ItemAdditionUpdateInput!, where: ItemAdditionWhereUniqueInput!): ItemAddition
  updateManyItemAdditions(data: ItemAdditionUpdateManyMutationInput!, where: ItemAdditionWhereInput): BatchPayload!
  upsertItemAddition(where: ItemAdditionWhereUniqueInput!, create: ItemAdditionCreateInput!, update: ItemAdditionUpdateInput!): ItemAddition!
  deleteItemAddition(where: ItemAdditionWhereUniqueInput!): ItemAddition
  deleteManyItemAdditions(where: ItemAdditionWhereInput): BatchPayload!
  createModification(data: ModificationCreateInput!): Modification!
  updateModification(data: ModificationUpdateInput!, where: ModificationWhereUniqueInput!): Modification
  updateManyModifications(data: ModificationUpdateManyMutationInput!, where: ModificationWhereInput): BatchPayload!
  upsertModification(where: ModificationWhereUniqueInput!, create: ModificationCreateInput!, update: ModificationUpdateInput!): Modification!
  deleteModification(where: ModificationWhereUniqueInput!): Modification
  deleteManyModifications(where: ModificationWhereInput): BatchPayload!
  createRecipe(data: RecipeCreateInput!): Recipe!
  updateRecipe(data: RecipeUpdateInput!, where: RecipeWhereUniqueInput!): Recipe
  updateManyRecipes(data: RecipeUpdateManyMutationInput!, where: RecipeWhereInput): BatchPayload!
  upsertRecipe(where: RecipeWhereUniqueInput!, create: RecipeCreateInput!, update: RecipeUpdateInput!): Recipe!
  deleteRecipe(where: RecipeWhereUniqueInput!): Recipe
  deleteManyRecipes(where: RecipeWhereInput): BatchPayload!
  createRecipePhoto(data: RecipePhotoCreateInput!): RecipePhoto!
  updateRecipePhoto(data: RecipePhotoUpdateInput!, where: RecipePhotoWhereUniqueInput!): RecipePhoto
  updateManyRecipePhotos(data: RecipePhotoUpdateManyMutationInput!, where: RecipePhotoWhereInput): BatchPayload!
  upsertRecipePhoto(where: RecipePhotoWhereUniqueInput!, create: RecipePhotoCreateInput!, update: RecipePhotoUpdateInput!): RecipePhoto!
  deleteRecipePhoto(where: RecipePhotoWhereUniqueInput!): RecipePhoto
  deleteManyRecipePhotos(where: RecipePhotoWhereInput): BatchPayload!
  createSorting(data: SortingCreateInput!): Sorting!
  updateSorting(data: SortingUpdateInput!, where: SortingWhereUniqueInput!): Sorting
  updateManySortings(data: SortingUpdateManyMutationInput!, where: SortingWhereInput): BatchPayload!
  upsertSorting(where: SortingWhereUniqueInput!, create: SortingCreateInput!, update: SortingUpdateInput!): Sorting!
  deleteSorting(where: SortingWhereUniqueInput!): Sorting
  deleteManySortings(where: SortingWhereInput): BatchPayload!
  createStep(data: StepCreateInput!): Step!
  updateStep(data: StepUpdateInput!, where: StepWhereUniqueInput!): Step
  updateManySteps(data: StepUpdateManyMutationInput!, where: StepWhereInput): BatchPayload!
  upsertStep(where: StepWhereUniqueInput!, create: StepCreateInput!, update: StepUpdateInput!): Step!
  deleteStep(where: StepWhereUniqueInput!): Step
  deleteManySteps(where: StepWhereInput): BatchPayload!
  createStepAddition(data: StepAdditionCreateInput!): StepAddition!
  updateStepAddition(data: StepAdditionUpdateInput!, where: StepAdditionWhereUniqueInput!): StepAddition
  updateManyStepAdditions(data: StepAdditionUpdateManyMutationInput!, where: StepAdditionWhereInput): BatchPayload!
  upsertStepAddition(where: StepAdditionWhereUniqueInput!, create: StepAdditionCreateInput!, update: StepAdditionUpdateInput!): StepAddition!
  deleteStepAddition(where: StepAdditionWhereUniqueInput!): StepAddition
  deleteManyStepAdditions(where: StepAdditionWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  alteration(where: AlterationWhereUniqueInput!): Alteration
  alterations(where: AlterationWhereInput, orderBy: AlterationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Alteration]!
  alterationsConnection(where: AlterationWhereInput, orderBy: AlterationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AlterationConnection!
  ingredient(where: IngredientWhereUniqueInput!): Ingredient
  ingredients(where: IngredientWhereInput, orderBy: IngredientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ingredient]!
  ingredientsConnection(where: IngredientWhereInput, orderBy: IngredientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IngredientConnection!
  ingredientAddition(where: IngredientAdditionWhereUniqueInput!): IngredientAddition
  ingredientAdditions(where: IngredientAdditionWhereInput, orderBy: IngredientAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [IngredientAddition]!
  ingredientAdditionsConnection(where: IngredientAdditionWhereInput, orderBy: IngredientAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IngredientAdditionConnection!
  item(where: ItemWhereUniqueInput!): Item
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Item]!
  itemsConnection(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ItemConnection!
  itemAddition(where: ItemAdditionWhereUniqueInput!): ItemAddition
  itemAdditions(where: ItemAdditionWhereInput, orderBy: ItemAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ItemAddition]!
  itemAdditionsConnection(where: ItemAdditionWhereInput, orderBy: ItemAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ItemAdditionConnection!
  modification(where: ModificationWhereUniqueInput!): Modification
  modifications(where: ModificationWhereInput, orderBy: ModificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Modification]!
  modificationsConnection(where: ModificationWhereInput, orderBy: ModificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ModificationConnection!
  recipe(where: RecipeWhereUniqueInput!): Recipe
  recipes(where: RecipeWhereInput, orderBy: RecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Recipe]!
  recipesConnection(where: RecipeWhereInput, orderBy: RecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RecipeConnection!
  recipePhoto(where: RecipePhotoWhereUniqueInput!): RecipePhoto
  recipePhotos(where: RecipePhotoWhereInput, orderBy: RecipePhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RecipePhoto]!
  recipePhotosConnection(where: RecipePhotoWhereInput, orderBy: RecipePhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RecipePhotoConnection!
  sorting(where: SortingWhereUniqueInput!): Sorting
  sortings(where: SortingWhereInput, orderBy: SortingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sorting]!
  sortingsConnection(where: SortingWhereInput, orderBy: SortingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SortingConnection!
  step(where: StepWhereUniqueInput!): Step
  steps(where: StepWhereInput, orderBy: StepOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Step]!
  stepsConnection(where: StepWhereInput, orderBy: StepOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StepConnection!
  stepAddition(where: StepAdditionWhereUniqueInput!): StepAddition
  stepAdditions(where: StepAdditionWhereInput, orderBy: StepAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StepAddition]!
  stepAdditionsConnection(where: StepAdditionWhereInput, orderBy: StepAdditionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StepAdditionConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Recipe {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  author: User!
  title: String!
  time: String!
  servingAmount: String!
  servingType: String!
  description: String!
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Item!]
  modifications(where: ModificationWhereInput, orderBy: ModificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Modification!]
  photos(where: RecipePhotoWhereInput, orderBy: RecipePhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RecipePhoto!]
}

type RecipeConnection {
  pageInfo: PageInfo!
  edges: [RecipeEdge]!
  aggregate: AggregateRecipe!
}

input RecipeCreateInput {
  id: ID
  uid: ID!
  author: UserCreateOneWithoutRecipesInput!
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemCreateManyWithoutRecipeInput
  modifications: ModificationCreateManyWithoutRecipeInput
  photos: RecipePhotoCreateManyWithoutRecipeInput
}

input RecipeCreateManyWithoutAuthorInput {
  create: [RecipeCreateWithoutAuthorInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateOneWithoutItemsInput {
  create: RecipeCreateWithoutItemsInput
  connect: RecipeWhereUniqueInput
}

input RecipeCreateOneWithoutModificationsInput {
  create: RecipeCreateWithoutModificationsInput
  connect: RecipeWhereUniqueInput
}

input RecipeCreateOneWithoutPhotosInput {
  create: RecipeCreateWithoutPhotosInput
  connect: RecipeWhereUniqueInput
}

input RecipeCreateWithoutAuthorInput {
  id: ID
  uid: ID!
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemCreateManyWithoutRecipeInput
  modifications: ModificationCreateManyWithoutRecipeInput
  photos: RecipePhotoCreateManyWithoutRecipeInput
}

input RecipeCreateWithoutItemsInput {
  id: ID
  uid: ID!
  author: UserCreateOneWithoutRecipesInput!
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  modifications: ModificationCreateManyWithoutRecipeInput
  photos: RecipePhotoCreateManyWithoutRecipeInput
}

input RecipeCreateWithoutModificationsInput {
  id: ID
  uid: ID!
  author: UserCreateOneWithoutRecipesInput!
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemCreateManyWithoutRecipeInput
  photos: RecipePhotoCreateManyWithoutRecipeInput
}

input RecipeCreateWithoutPhotosInput {
  id: ID
  uid: ID!
  author: UserCreateOneWithoutRecipesInput!
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemCreateManyWithoutRecipeInput
  modifications: ModificationCreateManyWithoutRecipeInput
}

type RecipeEdge {
  node: Recipe!
  cursor: String!
}

enum RecipeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  title_ASC
  title_DESC
  time_ASC
  time_DESC
  servingAmount_ASC
  servingAmount_DESC
  servingType_ASC
  servingType_DESC
  description_ASC
  description_DESC
}

type RecipePhoto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  url: String!
  recipe: Recipe!
}

type RecipePhotoConnection {
  pageInfo: PageInfo!
  edges: [RecipePhotoEdge]!
  aggregate: AggregateRecipePhoto!
}

input RecipePhotoCreateInput {
  id: ID
  filename: String!
  url: String!
  recipe: RecipeCreateOneWithoutPhotosInput!
}

input RecipePhotoCreateManyWithoutRecipeInput {
  create: [RecipePhotoCreateWithoutRecipeInput!]
  connect: [RecipePhotoWhereUniqueInput!]
}

input RecipePhotoCreateWithoutRecipeInput {
  id: ID
  filename: String!
  url: String!
}

type RecipePhotoEdge {
  node: RecipePhoto!
  cursor: String!
}

enum RecipePhotoOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  filename_ASC
  filename_DESC
  url_ASC
  url_DESC
}

type RecipePhotoPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  url: String!
}

input RecipePhotoScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  filename: String
  filename_not: String
  filename_in: [String!]
  filename_not_in: [String!]
  filename_lt: String
  filename_lte: String
  filename_gt: String
  filename_gte: String
  filename_contains: String
  filename_not_contains: String
  filename_starts_with: String
  filename_not_starts_with: String
  filename_ends_with: String
  filename_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  AND: [RecipePhotoScalarWhereInput!]
  OR: [RecipePhotoScalarWhereInput!]
  NOT: [RecipePhotoScalarWhereInput!]
}

type RecipePhotoSubscriptionPayload {
  mutation: MutationType!
  node: RecipePhoto
  updatedFields: [String!]
  previousValues: RecipePhotoPreviousValues
}

input RecipePhotoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RecipePhotoWhereInput
  AND: [RecipePhotoSubscriptionWhereInput!]
  OR: [RecipePhotoSubscriptionWhereInput!]
  NOT: [RecipePhotoSubscriptionWhereInput!]
}

input RecipePhotoUpdateInput {
  filename: String
  url: String
  recipe: RecipeUpdateOneRequiredWithoutPhotosInput
}

input RecipePhotoUpdateManyDataInput {
  filename: String
  url: String
}

input RecipePhotoUpdateManyMutationInput {
  filename: String
  url: String
}

input RecipePhotoUpdateManyWithoutRecipeInput {
  create: [RecipePhotoCreateWithoutRecipeInput!]
  delete: [RecipePhotoWhereUniqueInput!]
  connect: [RecipePhotoWhereUniqueInput!]
  set: [RecipePhotoWhereUniqueInput!]
  disconnect: [RecipePhotoWhereUniqueInput!]
  update: [RecipePhotoUpdateWithWhereUniqueWithoutRecipeInput!]
  upsert: [RecipePhotoUpsertWithWhereUniqueWithoutRecipeInput!]
  deleteMany: [RecipePhotoScalarWhereInput!]
  updateMany: [RecipePhotoUpdateManyWithWhereNestedInput!]
}

input RecipePhotoUpdateManyWithWhereNestedInput {
  where: RecipePhotoScalarWhereInput!
  data: RecipePhotoUpdateManyDataInput!
}

input RecipePhotoUpdateWithoutRecipeDataInput {
  filename: String
  url: String
}

input RecipePhotoUpdateWithWhereUniqueWithoutRecipeInput {
  where: RecipePhotoWhereUniqueInput!
  data: RecipePhotoUpdateWithoutRecipeDataInput!
}

input RecipePhotoUpsertWithWhereUniqueWithoutRecipeInput {
  where: RecipePhotoWhereUniqueInput!
  update: RecipePhotoUpdateWithoutRecipeDataInput!
  create: RecipePhotoCreateWithoutRecipeInput!
}

input RecipePhotoWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  filename: String
  filename_not: String
  filename_in: [String!]
  filename_not_in: [String!]
  filename_lt: String
  filename_lte: String
  filename_gt: String
  filename_gte: String
  filename_contains: String
  filename_not_contains: String
  filename_starts_with: String
  filename_not_starts_with: String
  filename_ends_with: String
  filename_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  recipe: RecipeWhereInput
  AND: [RecipePhotoWhereInput!]
  OR: [RecipePhotoWhereInput!]
  NOT: [RecipePhotoWhereInput!]
}

input RecipePhotoWhereUniqueInput {
  id: ID
}

type RecipePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  title: String!
  time: String!
  servingAmount: String!
  servingType: String!
  description: String!
}

input RecipeScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  time: String
  time_not: String
  time_in: [String!]
  time_not_in: [String!]
  time_lt: String
  time_lte: String
  time_gt: String
  time_gte: String
  time_contains: String
  time_not_contains: String
  time_starts_with: String
  time_not_starts_with: String
  time_ends_with: String
  time_not_ends_with: String
  servingAmount: String
  servingAmount_not: String
  servingAmount_in: [String!]
  servingAmount_not_in: [String!]
  servingAmount_lt: String
  servingAmount_lte: String
  servingAmount_gt: String
  servingAmount_gte: String
  servingAmount_contains: String
  servingAmount_not_contains: String
  servingAmount_starts_with: String
  servingAmount_not_starts_with: String
  servingAmount_ends_with: String
  servingAmount_not_ends_with: String
  servingType: String
  servingType_not: String
  servingType_in: [String!]
  servingType_not_in: [String!]
  servingType_lt: String
  servingType_lte: String
  servingType_gt: String
  servingType_gte: String
  servingType_contains: String
  servingType_not_contains: String
  servingType_starts_with: String
  servingType_not_starts_with: String
  servingType_ends_with: String
  servingType_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [RecipeScalarWhereInput!]
  OR: [RecipeScalarWhereInput!]
  NOT: [RecipeScalarWhereInput!]
}

type RecipeSubscriptionPayload {
  mutation: MutationType!
  node: Recipe
  updatedFields: [String!]
  previousValues: RecipePreviousValues
}

input RecipeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RecipeWhereInput
  AND: [RecipeSubscriptionWhereInput!]
  OR: [RecipeSubscriptionWhereInput!]
  NOT: [RecipeSubscriptionWhereInput!]
}

input RecipeUpdateInput {
  uid: ID
  author: UserUpdateOneRequiredWithoutRecipesInput
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemUpdateManyWithoutRecipeInput
  modifications: ModificationUpdateManyWithoutRecipeInput
  photos: RecipePhotoUpdateManyWithoutRecipeInput
}

input RecipeUpdateManyDataInput {
  uid: ID
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
}

input RecipeUpdateManyMutationInput {
  uid: ID
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
}

input RecipeUpdateManyWithoutAuthorInput {
  create: [RecipeCreateWithoutAuthorInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [RecipeScalarWhereInput!]
  updateMany: [RecipeUpdateManyWithWhereNestedInput!]
}

input RecipeUpdateManyWithWhereNestedInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyDataInput!
}

input RecipeUpdateOneRequiredWithoutItemsInput {
  create: RecipeCreateWithoutItemsInput
  update: RecipeUpdateWithoutItemsDataInput
  upsert: RecipeUpsertWithoutItemsInput
  connect: RecipeWhereUniqueInput
}

input RecipeUpdateOneRequiredWithoutModificationsInput {
  create: RecipeCreateWithoutModificationsInput
  update: RecipeUpdateWithoutModificationsDataInput
  upsert: RecipeUpsertWithoutModificationsInput
  connect: RecipeWhereUniqueInput
}

input RecipeUpdateOneRequiredWithoutPhotosInput {
  create: RecipeCreateWithoutPhotosInput
  update: RecipeUpdateWithoutPhotosDataInput
  upsert: RecipeUpsertWithoutPhotosInput
  connect: RecipeWhereUniqueInput
}

input RecipeUpdateWithoutAuthorDataInput {
  uid: ID
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemUpdateManyWithoutRecipeInput
  modifications: ModificationUpdateManyWithoutRecipeInput
  photos: RecipePhotoUpdateManyWithoutRecipeInput
}

input RecipeUpdateWithoutItemsDataInput {
  uid: ID
  author: UserUpdateOneRequiredWithoutRecipesInput
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  modifications: ModificationUpdateManyWithoutRecipeInput
  photos: RecipePhotoUpdateManyWithoutRecipeInput
}

input RecipeUpdateWithoutModificationsDataInput {
  uid: ID
  author: UserUpdateOneRequiredWithoutRecipesInput
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemUpdateManyWithoutRecipeInput
  photos: RecipePhotoUpdateManyWithoutRecipeInput
}

input RecipeUpdateWithoutPhotosDataInput {
  uid: ID
  author: UserUpdateOneRequiredWithoutRecipesInput
  title: String
  time: String
  servingAmount: String
  servingType: String
  description: String
  items: ItemUpdateManyWithoutRecipeInput
  modifications: ModificationUpdateManyWithoutRecipeInput
}

input RecipeUpdateWithWhereUniqueWithoutAuthorInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutAuthorDataInput!
}

input RecipeUpsertWithoutItemsInput {
  update: RecipeUpdateWithoutItemsDataInput!
  create: RecipeCreateWithoutItemsInput!
}

input RecipeUpsertWithoutModificationsInput {
  update: RecipeUpdateWithoutModificationsDataInput!
  create: RecipeCreateWithoutModificationsInput!
}

input RecipeUpsertWithoutPhotosInput {
  update: RecipeUpdateWithoutPhotosDataInput!
  create: RecipeCreateWithoutPhotosInput!
}

input RecipeUpsertWithWhereUniqueWithoutAuthorInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutAuthorDataInput!
  create: RecipeCreateWithoutAuthorInput!
}

input RecipeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  author: UserWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  time: String
  time_not: String
  time_in: [String!]
  time_not_in: [String!]
  time_lt: String
  time_lte: String
  time_gt: String
  time_gte: String
  time_contains: String
  time_not_contains: String
  time_starts_with: String
  time_not_starts_with: String
  time_ends_with: String
  time_not_ends_with: String
  servingAmount: String
  servingAmount_not: String
  servingAmount_in: [String!]
  servingAmount_not_in: [String!]
  servingAmount_lt: String
  servingAmount_lte: String
  servingAmount_gt: String
  servingAmount_gte: String
  servingAmount_contains: String
  servingAmount_not_contains: String
  servingAmount_starts_with: String
  servingAmount_not_starts_with: String
  servingAmount_ends_with: String
  servingAmount_not_ends_with: String
  servingType: String
  servingType_not: String
  servingType_in: [String!]
  servingType_not_in: [String!]
  servingType_lt: String
  servingType_lte: String
  servingType_gt: String
  servingType_gte: String
  servingType_contains: String
  servingType_not_contains: String
  servingType_starts_with: String
  servingType_not_starts_with: String
  servingType_ends_with: String
  servingType_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  items_every: ItemWhereInput
  items_some: ItemWhereInput
  items_none: ItemWhereInput
  modifications_every: ModificationWhereInput
  modifications_some: ModificationWhereInput
  modifications_none: ModificationWhereInput
  photos_every: RecipePhotoWhereInput
  photos_some: RecipePhotoWhereInput
  photos_none: RecipePhotoWhereInput
  AND: [RecipeWhereInput!]
  OR: [RecipeWhereInput!]
  NOT: [RecipeWhereInput!]
}

input RecipeWhereUniqueInput {
  id: ID
  uid: ID
}

type Sorting {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  order: [ID!]!
  modification: Modification!
}

type SortingConnection {
  pageInfo: PageInfo!
  edges: [SortingEdge]!
  aggregate: AggregateSorting!
}

input SortingCreateInput {
  id: ID
  uid: ID!
  parentId: ID!
  order: SortingCreateorderInput
  modification: ModificationCreateOneWithoutSortingsInput!
}

input SortingCreateManyWithoutModificationInput {
  create: [SortingCreateWithoutModificationInput!]
  connect: [SortingWhereUniqueInput!]
}

input SortingCreateorderInput {
  set: [ID!]
}

input SortingCreateWithoutModificationInput {
  id: ID
  uid: ID!
  parentId: ID!
  order: SortingCreateorderInput
}

type SortingEdge {
  node: Sorting!
  cursor: String!
}

enum SortingOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  parentId_ASC
  parentId_DESC
}

type SortingPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  order: [ID!]!
}

input SortingScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  AND: [SortingScalarWhereInput!]
  OR: [SortingScalarWhereInput!]
  NOT: [SortingScalarWhereInput!]
}

type SortingSubscriptionPayload {
  mutation: MutationType!
  node: Sorting
  updatedFields: [String!]
  previousValues: SortingPreviousValues
}

input SortingSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SortingWhereInput
  AND: [SortingSubscriptionWhereInput!]
  OR: [SortingSubscriptionWhereInput!]
  NOT: [SortingSubscriptionWhereInput!]
}

input SortingUpdateInput {
  uid: ID
  parentId: ID
  order: SortingUpdateorderInput
  modification: ModificationUpdateOneRequiredWithoutSortingsInput
}

input SortingUpdateManyDataInput {
  uid: ID
  parentId: ID
  order: SortingUpdateorderInput
}

input SortingUpdateManyMutationInput {
  uid: ID
  parentId: ID
  order: SortingUpdateorderInput
}

input SortingUpdateManyWithoutModificationInput {
  create: [SortingCreateWithoutModificationInput!]
  delete: [SortingWhereUniqueInput!]
  connect: [SortingWhereUniqueInput!]
  set: [SortingWhereUniqueInput!]
  disconnect: [SortingWhereUniqueInput!]
  update: [SortingUpdateWithWhereUniqueWithoutModificationInput!]
  upsert: [SortingUpsertWithWhereUniqueWithoutModificationInput!]
  deleteMany: [SortingScalarWhereInput!]
  updateMany: [SortingUpdateManyWithWhereNestedInput!]
}

input SortingUpdateManyWithWhereNestedInput {
  where: SortingScalarWhereInput!
  data: SortingUpdateManyDataInput!
}

input SortingUpdateorderInput {
  set: [ID!]
}

input SortingUpdateWithoutModificationDataInput {
  uid: ID
  parentId: ID
  order: SortingUpdateorderInput
}

input SortingUpdateWithWhereUniqueWithoutModificationInput {
  where: SortingWhereUniqueInput!
  data: SortingUpdateWithoutModificationDataInput!
}

input SortingUpsertWithWhereUniqueWithoutModificationInput {
  where: SortingWhereUniqueInput!
  update: SortingUpdateWithoutModificationDataInput!
  create: SortingCreateWithoutModificationInput!
}

input SortingWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  modification: ModificationWhereInput
  AND: [SortingWhereInput!]
  OR: [SortingWhereInput!]
  NOT: [SortingWhereInput!]
}

input SortingWhereUniqueInput {
  id: ID
  uid: ID
}

type Step {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  index: Int!
  directions: String!
  notes: String!
  item: Item!
  ingredients(where: IngredientWhereInput, orderBy: IngredientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ingredient!]
}

type StepAddition {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  directions: String!
  notes: String!
  modification: Modification!
}

type StepAdditionConnection {
  pageInfo: PageInfo!
  edges: [StepAdditionEdge]!
  aggregate: AggregateStepAddition!
}

input StepAdditionCreateInput {
  id: ID
  uid: ID!
  parentId: ID!
  directions: String!
  notes: String!
  modification: ModificationCreateOneWithoutStepAdditionsInput!
}

input StepAdditionCreateManyWithoutModificationInput {
  create: [StepAdditionCreateWithoutModificationInput!]
  connect: [StepAdditionWhereUniqueInput!]
}

input StepAdditionCreateWithoutModificationInput {
  id: ID
  uid: ID!
  parentId: ID!
  directions: String!
  notes: String!
}

type StepAdditionEdge {
  node: StepAddition!
  cursor: String!
}

enum StepAdditionOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  parentId_ASC
  parentId_DESC
  directions_ASC
  directions_DESC
  notes_ASC
  notes_DESC
}

type StepAdditionPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  parentId: ID!
  directions: String!
  notes: String!
}

input StepAdditionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  directions: String
  directions_not: String
  directions_in: [String!]
  directions_not_in: [String!]
  directions_lt: String
  directions_lte: String
  directions_gt: String
  directions_gte: String
  directions_contains: String
  directions_not_contains: String
  directions_starts_with: String
  directions_not_starts_with: String
  directions_ends_with: String
  directions_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  AND: [StepAdditionScalarWhereInput!]
  OR: [StepAdditionScalarWhereInput!]
  NOT: [StepAdditionScalarWhereInput!]
}

type StepAdditionSubscriptionPayload {
  mutation: MutationType!
  node: StepAddition
  updatedFields: [String!]
  previousValues: StepAdditionPreviousValues
}

input StepAdditionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: StepAdditionWhereInput
  AND: [StepAdditionSubscriptionWhereInput!]
  OR: [StepAdditionSubscriptionWhereInput!]
  NOT: [StepAdditionSubscriptionWhereInput!]
}

input StepAdditionUpdateInput {
  uid: ID
  parentId: ID
  directions: String
  notes: String
  modification: ModificationUpdateOneRequiredWithoutStepAdditionsInput
}

input StepAdditionUpdateManyDataInput {
  uid: ID
  parentId: ID
  directions: String
  notes: String
}

input StepAdditionUpdateManyMutationInput {
  uid: ID
  parentId: ID
  directions: String
  notes: String
}

input StepAdditionUpdateManyWithoutModificationInput {
  create: [StepAdditionCreateWithoutModificationInput!]
  delete: [StepAdditionWhereUniqueInput!]
  connect: [StepAdditionWhereUniqueInput!]
  set: [StepAdditionWhereUniqueInput!]
  disconnect: [StepAdditionWhereUniqueInput!]
  update: [StepAdditionUpdateWithWhereUniqueWithoutModificationInput!]
  upsert: [StepAdditionUpsertWithWhereUniqueWithoutModificationInput!]
  deleteMany: [StepAdditionScalarWhereInput!]
  updateMany: [StepAdditionUpdateManyWithWhereNestedInput!]
}

input StepAdditionUpdateManyWithWhereNestedInput {
  where: StepAdditionScalarWhereInput!
  data: StepAdditionUpdateManyDataInput!
}

input StepAdditionUpdateWithoutModificationDataInput {
  uid: ID
  parentId: ID
  directions: String
  notes: String
}

input StepAdditionUpdateWithWhereUniqueWithoutModificationInput {
  where: StepAdditionWhereUniqueInput!
  data: StepAdditionUpdateWithoutModificationDataInput!
}

input StepAdditionUpsertWithWhereUniqueWithoutModificationInput {
  where: StepAdditionWhereUniqueInput!
  update: StepAdditionUpdateWithoutModificationDataInput!
  create: StepAdditionCreateWithoutModificationInput!
}

input StepAdditionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  parentId: ID
  parentId_not: ID
  parentId_in: [ID!]
  parentId_not_in: [ID!]
  parentId_lt: ID
  parentId_lte: ID
  parentId_gt: ID
  parentId_gte: ID
  parentId_contains: ID
  parentId_not_contains: ID
  parentId_starts_with: ID
  parentId_not_starts_with: ID
  parentId_ends_with: ID
  parentId_not_ends_with: ID
  directions: String
  directions_not: String
  directions_in: [String!]
  directions_not_in: [String!]
  directions_lt: String
  directions_lte: String
  directions_gt: String
  directions_gte: String
  directions_contains: String
  directions_not_contains: String
  directions_starts_with: String
  directions_not_starts_with: String
  directions_ends_with: String
  directions_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  modification: ModificationWhereInput
  AND: [StepAdditionWhereInput!]
  OR: [StepAdditionWhereInput!]
  NOT: [StepAdditionWhereInput!]
}

input StepAdditionWhereUniqueInput {
  id: ID
  uid: ID
}

type StepConnection {
  pageInfo: PageInfo!
  edges: [StepEdge]!
  aggregate: AggregateStep!
}

input StepCreateInput {
  id: ID
  uid: ID!
  index: Int!
  directions: String
  notes: String
  item: ItemCreateOneWithoutStepsInput!
  ingredients: IngredientCreateManyWithoutStepInput
}

input StepCreateManyWithoutItemInput {
  create: [StepCreateWithoutItemInput!]
  connect: [StepWhereUniqueInput!]
}

input StepCreateOneWithoutIngredientsInput {
  create: StepCreateWithoutIngredientsInput
  connect: StepWhereUniqueInput
}

input StepCreateWithoutIngredientsInput {
  id: ID
  uid: ID!
  index: Int!
  directions: String
  notes: String
  item: ItemCreateOneWithoutStepsInput!
}

input StepCreateWithoutItemInput {
  id: ID
  uid: ID!
  index: Int!
  directions: String
  notes: String
  ingredients: IngredientCreateManyWithoutStepInput
}

type StepEdge {
  node: Step!
  cursor: String!
}

enum StepOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  uid_ASC
  uid_DESC
  index_ASC
  index_DESC
  directions_ASC
  directions_DESC
  notes_ASC
  notes_DESC
}

type StepPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: ID!
  index: Int!
  directions: String!
  notes: String!
}

input StepScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  directions: String
  directions_not: String
  directions_in: [String!]
  directions_not_in: [String!]
  directions_lt: String
  directions_lte: String
  directions_gt: String
  directions_gte: String
  directions_contains: String
  directions_not_contains: String
  directions_starts_with: String
  directions_not_starts_with: String
  directions_ends_with: String
  directions_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  AND: [StepScalarWhereInput!]
  OR: [StepScalarWhereInput!]
  NOT: [StepScalarWhereInput!]
}

type StepSubscriptionPayload {
  mutation: MutationType!
  node: Step
  updatedFields: [String!]
  previousValues: StepPreviousValues
}

input StepSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: StepWhereInput
  AND: [StepSubscriptionWhereInput!]
  OR: [StepSubscriptionWhereInput!]
  NOT: [StepSubscriptionWhereInput!]
}

input StepUpdateInput {
  uid: ID
  index: Int
  directions: String
  notes: String
  item: ItemUpdateOneRequiredWithoutStepsInput
  ingredients: IngredientUpdateManyWithoutStepInput
}

input StepUpdateManyDataInput {
  uid: ID
  index: Int
  directions: String
  notes: String
}

input StepUpdateManyMutationInput {
  uid: ID
  index: Int
  directions: String
  notes: String
}

input StepUpdateManyWithoutItemInput {
  create: [StepCreateWithoutItemInput!]
  delete: [StepWhereUniqueInput!]
  connect: [StepWhereUniqueInput!]
  set: [StepWhereUniqueInput!]
  disconnect: [StepWhereUniqueInput!]
  update: [StepUpdateWithWhereUniqueWithoutItemInput!]
  upsert: [StepUpsertWithWhereUniqueWithoutItemInput!]
  deleteMany: [StepScalarWhereInput!]
  updateMany: [StepUpdateManyWithWhereNestedInput!]
}

input StepUpdateManyWithWhereNestedInput {
  where: StepScalarWhereInput!
  data: StepUpdateManyDataInput!
}

input StepUpdateOneRequiredWithoutIngredientsInput {
  create: StepCreateWithoutIngredientsInput
  update: StepUpdateWithoutIngredientsDataInput
  upsert: StepUpsertWithoutIngredientsInput
  connect: StepWhereUniqueInput
}

input StepUpdateWithoutIngredientsDataInput {
  uid: ID
  index: Int
  directions: String
  notes: String
  item: ItemUpdateOneRequiredWithoutStepsInput
}

input StepUpdateWithoutItemDataInput {
  uid: ID
  index: Int
  directions: String
  notes: String
  ingredients: IngredientUpdateManyWithoutStepInput
}

input StepUpdateWithWhereUniqueWithoutItemInput {
  where: StepWhereUniqueInput!
  data: StepUpdateWithoutItemDataInput!
}

input StepUpsertWithoutIngredientsInput {
  update: StepUpdateWithoutIngredientsDataInput!
  create: StepCreateWithoutIngredientsInput!
}

input StepUpsertWithWhereUniqueWithoutItemInput {
  where: StepWhereUniqueInput!
  update: StepUpdateWithoutItemDataInput!
  create: StepCreateWithoutItemInput!
}

input StepWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  uid: ID
  uid_not: ID
  uid_in: [ID!]
  uid_not_in: [ID!]
  uid_lt: ID
  uid_lte: ID
  uid_gt: ID
  uid_gte: ID
  uid_contains: ID
  uid_not_contains: ID
  uid_starts_with: ID
  uid_not_starts_with: ID
  uid_ends_with: ID
  uid_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  directions: String
  directions_not: String
  directions_in: [String!]
  directions_not_in: [String!]
  directions_lt: String
  directions_lte: String
  directions_gt: String
  directions_gte: String
  directions_contains: String
  directions_not_contains: String
  directions_starts_with: String
  directions_not_starts_with: String
  directions_ends_with: String
  directions_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  item: ItemWhereInput
  ingredients_every: IngredientWhereInput
  ingredients_some: IngredientWhereInput
  ingredients_none: IngredientWhereInput
  AND: [StepWhereInput!]
  OR: [StepWhereInput!]
  NOT: [StepWhereInput!]
}

input StepWhereUniqueInput {
  id: ID
  uid: ID
}

type Subscription {
  alteration(where: AlterationSubscriptionWhereInput): AlterationSubscriptionPayload
  ingredient(where: IngredientSubscriptionWhereInput): IngredientSubscriptionPayload
  ingredientAddition(where: IngredientAdditionSubscriptionWhereInput): IngredientAdditionSubscriptionPayload
  item(where: ItemSubscriptionWhereInput): ItemSubscriptionPayload
  itemAddition(where: ItemAdditionSubscriptionWhereInput): ItemAdditionSubscriptionPayload
  modification(where: ModificationSubscriptionWhereInput): ModificationSubscriptionPayload
  recipe(where: RecipeSubscriptionWhereInput): RecipeSubscriptionPayload
  recipePhoto(where: RecipePhotoSubscriptionWhereInput): RecipePhotoSubscriptionPayload
  sorting(where: SortingSubscriptionWhereInput): SortingSubscriptionPayload
  step(where: StepSubscriptionWhereInput): StepSubscriptionPayload
  stepAddition(where: StepAdditionSubscriptionWhereInput): StepAdditionSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  name: String!
  avatar: String
  slug: String
  emailVerified: Boolean!
  recipes(where: RecipeWhereInput, orderBy: RecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Recipe!]
  modifications(where: ModificationWhereInput, orderBy: ModificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Modification!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  password: String!
  name: String!
  avatar: String
  slug: String
  emailVerified: Boolean
  recipes: RecipeCreateManyWithoutAuthorInput
  modifications: ModificationCreateManyWithoutUserInput
}

input UserCreateOneWithoutModificationsInput {
  create: UserCreateWithoutModificationsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRecipesInput {
  create: UserCreateWithoutRecipesInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutModificationsInput {
  id: ID
  email: String!
  password: String!
  name: String!
  avatar: String
  slug: String
  emailVerified: Boolean
  recipes: RecipeCreateManyWithoutAuthorInput
}

input UserCreateWithoutRecipesInput {
  id: ID
  email: String!
  password: String!
  name: String!
  avatar: String
  slug: String
  emailVerified: Boolean
  modifications: ModificationCreateManyWithoutUserInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
  avatar_ASC
  avatar_DESC
  slug_ASC
  slug_DESC
  emailVerified_ASC
  emailVerified_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  name: String!
  avatar: String
  slug: String
  emailVerified: Boolean!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  avatar: String
  slug: String
  emailVerified: Boolean
  recipes: RecipeUpdateManyWithoutAuthorInput
  modifications: ModificationUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  name: String
  avatar: String
  slug: String
  emailVerified: Boolean
}

input UserUpdateOneRequiredWithoutModificationsInput {
  create: UserCreateWithoutModificationsInput
  update: UserUpdateWithoutModificationsDataInput
  upsert: UserUpsertWithoutModificationsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRecipesInput {
  create: UserCreateWithoutRecipesInput
  update: UserUpdateWithoutRecipesDataInput
  upsert: UserUpsertWithoutRecipesInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutModificationsDataInput {
  email: String
  password: String
  name: String
  avatar: String
  slug: String
  emailVerified: Boolean
  recipes: RecipeUpdateManyWithoutAuthorInput
}

input UserUpdateWithoutRecipesDataInput {
  email: String
  password: String
  name: String
  avatar: String
  slug: String
  emailVerified: Boolean
  modifications: ModificationUpdateManyWithoutUserInput
}

input UserUpsertWithoutModificationsInput {
  update: UserUpdateWithoutModificationsDataInput!
  create: UserCreateWithoutModificationsInput!
}

input UserUpsertWithoutRecipesInput {
  update: UserUpdateWithoutRecipesDataInput!
  create: UserCreateWithoutRecipesInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  avatar: String
  avatar_not: String
  avatar_in: [String!]
  avatar_not_in: [String!]
  avatar_lt: String
  avatar_lte: String
  avatar_gt: String
  avatar_gte: String
  avatar_contains: String
  avatar_not_contains: String
  avatar_starts_with: String
  avatar_not_starts_with: String
  avatar_ends_with: String
  avatar_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  emailVerified: Boolean
  emailVerified_not: Boolean
  recipes_every: RecipeWhereInput
  recipes_some: RecipeWhereInput
  recipes_none: RecipeWhereInput
  modifications_every: ModificationWhereInput
  modifications_some: ModificationWhereInput
  modifications_none: ModificationWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
`
      }
    